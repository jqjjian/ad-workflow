---
description: 
globs: 
alwaysApply: true
---
# 前端开发规范

本文档定义了广告工作流项目的前端开发规范，包括组件设计、样式管理和交互实现等方面的最佳实践。

## 组件设计
- 采用组合优于继承的原则设计组件
- 组件应遵循单一职责原则，功能单一且专注
- 拆分大型组件为多个小型组件，提高可维护性
- 使用 TypeScript 类型定义组件接口
- 组件属性应有默认值和类型验证

## 样式管理
- 使用 Tailwind CSS 构建用户界面
- 避免内联样式，优先使用 Tailwind 类名
- 复杂组件可使用 CSS 模块或 styled-components
- 使用主题变量管理颜色、间距等样式属性
- 遵循响应式设计原则，适配不同设备尺寸

## 状态管理
- 本地状态使用 React 钩子（如 `useState`, `useReducer`）
- 跨组件状态根据复杂度选择 Context API 或状态管理库
- 使用不可变数据模式更新状态
- 将状态逻辑与 UI 渲染逻辑分离
- 使用自定义钩子封装复杂状态逻辑

## 表单处理
- 使用 React Hook Form 或 Formik 管理表单状态
- 表单验证使用 Zod 或 Yup 等库
- 错误信息应清晰易懂，提供修正指导
- 使用受控组件处理表单输入
- 实现适当的表单提交反馈和错误处理

## 性能优化
- 使用 React.memo 避免不必要的组件重渲染
- 使用 useMemo 和 useCallback 优化计算密集型操作
- 实现虚拟列表渲染大量数据
- 懒加载非关键组件和路由
- 使用图片优化技术（如 WebP 格式、响应式图像）

## 可访问性
- 遵循 WCAG 2.1 AA 级标准
- 提供适当的颜色对比度
- 使用语义化 HTML 结构
- 确保键盘可访问性和屏幕阅读器兼容性
- 实现适当的表单标签和错误提示

## 错误处理
- 实现全局错误边界捕获未处理异常
- 为异步操作提供优雅的错误处理和重试机制
- 显示用户友好的错误消息，避免技术术语
- 记录客户端错误用于后期分析和修复
- 提供明确的用户指导解决问题
