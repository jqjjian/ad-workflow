
#PROXY-START/

location ^~ /
{
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header REMOTE-HOST $remote_addr;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_http_version 1.1;
     
    # proxy_hide_header Upgrade;

    add_header X-Cache $upstream_cache_status;

    #Set Nginx Cache
    
    
    set $static_fileBvMIo2OB 0;
    if ( $uri ~* "\.(gif|png|jpg|css|js|woff|woff2)$" )
    {
    	set $static_fileBvMIo2OB 1;
    	expires 1m;
        }
    if ( $static_fileBvMIo2OB = 0 )
    {
    add_header Cache-Control no-cache;
    }
}

#PROXY-END/



#PROXY-START/

location ^~ /
{
    proxy_pass http://127.0.0.1:3000;
    # 使用正确的host头
    proxy_set_header Host https://myad.shopwis.cn;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header x-nextjs-data 1;
    
    proxy_set_header REMOTE-HOST $remote_addr;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_http_version 1.1;
    
    # 禁用代理缓存
    proxy_no_cache 1;
    proxy_cache_bypass 1;
    
    # 增加超时时间
    proxy_read_timeout 600s;
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    
    # 检查浏览器控制台中是否有404错误的资源
    # 可以通过网络请求头添加调试信息
    add_header X-Debug-Info "Host: $host, Server-Name: $server_name" always;

    # 静态资源缓存
    set $static_fileBvMIo2OB 0;
    if ( $uri ~* "\.(gif|png|jpg|css|js|woff|woff2)$" )
    {
        set $static_fileBvMIo2OB 1;
        expires 1m;
    }
    if ( $static_fileBvMIo2OB = 0 )
    {
        add_header Cache-Control no-cache;
    }
}

# 为了解决可能的_next静态资源问题，单独处理
location ^~ /_next/ {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache_bypass $http_upgrade;
    expires 30d;
}

#PROXY-END/









// php
server
{
    listen 80;
    listen 443 ssl http2 ;
    server_name myad.shopwis.cn;
    index index.php index.html index.htm default.php default.htm default.html;
    root /www/wwwroot/myad.shopwis.cn;





    #CERT-APPLY-CHECK--START
    # 用于SSL证书申请时的文件验证相关配置 -- 请勿删除
    include /www/server/panel/vhost/nginx/well-known/myad.shopwis.cn.conf;
    #CERT-APPLY-CHECK--END

    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    ssl_certificate    /www/server/panel/vhost/cert/myad.shopwis.cn/fullchain.pem;
    ssl_certificate_key    /www/server/panel/vhost/cert/myad.shopwis.cn/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_tickets on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000";
    error_page 497  https://$host$request_uri;

    #SSL-END

    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改
    error_page 404 /404.html;
    #error_page 502 /502.html;
    #ERROR-PAGE-END

    #PHP-INFO-START  PHP引用配置，可以注释或修改
    #清理缓存规则

    location ~ /purge(/.*) {
        proxy_cache_purge cache_one $host$1$is_args$args;
        #access_log  /www/wwwlogs/myad.shopwis.cn_purge_cache.log;
    }
    #引用反向代理规则，注释后配置的反向代理将无效
    include /www/server/panel/vhost/nginx/proxy/myad.shopwis.cn/*.conf;

    include enable-php-00.conf;
    #PHP-INFO-END

    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效
    include /www/server/panel/vhost/rewrite/myad.shopwis.cn.conf;
    #REWRITE-END

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md)
    {
        return 404;
    }

    #一键申请SSL证书验证目录相关设置
    location ~ \.well-known{
        allow all;
    }

    #禁止在证书验证目录放入敏感文件
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }

    

    
    access_log  /www/wwwlogs/myad.shopwis.cn.log;
    error_log  /www/wwwlogs/myad.shopwis.cn.error.log;
}










server 
{
    listen 80;
    listen 443 ssl http2;
    server_name myad.shopwis.cn;

    # 禁用默认索引文件匹配（关键！）
    index index.php index.html index.htm;
    location / {
        try_files $uri $uri/ @nextjs;  # 跳过静态文件检查，直接代理
    }

    # 反向代理到Next.js应用
    location @nextjs {
        proxy_pass http://localhost:3000;  # 与Docker容器端口一致
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
    }

    # 静态文件缓存（提升性能）
    location /_next/static {
        alias /www/wwwroot/myad.shopwis.cn/.next/static;
        expires 365d;
        access_log off;
        add_header Cache-Control "public";
    }

    # 安全配置（移除PHP相关引用）
    include /www/server/panel/vhost/nginx/well-known/myad.shopwis.cn.conf;
     #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    ssl_certificate    /www/server/panel/vhost/cert/myad.shopwis.cn/fullchain.pem;
    ssl_certificate_key    /www/server/panel/vhost/cert/myad.shopwis.cn/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_tickets on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000";
    error_page 497  https://$host$request_uri;

    #SSL-END
    # ...保留原有SSL配置
}









server {
    listen 80;
    listen 443 ssl http2;
    server_name myad.shopwis.cn;
    
    # 移除 PHP 索引文件，仅保留静态文件索引
    index index.html index.htm default.html;
    
    # 根目录（可根据需要保留或调整）
    root /www/wwwroot/myad.shopwis.cn;

    # SSL 证书配置（保留）
    #CERT-APPLY-CHECK--START
    include /www/server/panel/vhost/nginx/well-known/myad.shopwis.cn.conf;
    #CERT-APPLY-CHECK--END

    # SSL 配置（保留）
    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    ssl_certificate /www/server/panel/vhost/cert/myad.shopwis.cn/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/myad.shopwis.cn/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_tickets on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000";
    error_page 497 https://$host$request_uri;
    #SSL-END

    # 移除 PHP 错误页引用
    #ERROR-PAGE-START 错误页配置，可以注释、删除或修改
    error_page 404 /404.html;
    error_page 502 /502.html;
    #ERROR-PAGE-END

    # 移除 purge 缓存规则（PHP 相关）
    # 原 purge 配置已删除

    # 保留反向代理引用（关键！确保你的 Next.js 代理配置在此处生效）
    include /www/server/panel/vhost/nginx/proxy/myad.shopwis.cn/*.conf;

    # 移除 PHP 引用 enable-php-00.conf

    # 保留重写规则（若无需重写可删除）
    #REWRITE-START
    include /www/server/panel/vhost/rewrite/myad.shopwis.cn.conf;
    #REWRITE-END

    # 安全配置（保留）
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
        return 404;
    }

    # SSL 证书验证目录（必须保留）
    location ~ \.well-known {
        allow all;
    }

    # 安全防护（保留）
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }

    # 日志配置（保留）
    access_log /www/wwwlogs/myad.shopwis.cn.log;
    error_log /www/wwwlogs/myad.shopwis.cn.error.log;
}





// 新

server {
    listen 80;
    server_name myad.shopwis.cn;
    
    # HTTP 跳转 HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name myad.shopwis.cn;
    
    # SSL 证书配置（保留）
    #CERT-APPLY-CHECK--START
    include /www/server/panel/vhost/nginx/well-known/myad.shopwis.cn.conf;
    #CERT-APPLY-CHECK--END

    # SSL 配置（保留）
    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    ssl_certificate /www/server/panel/vhost/cert/myad.shopwis.cn/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/myad.shopwis.cn/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_tickets on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000";
    error_page 497 https://$host$request_uri;
    #SSL-END
    
    # 所有静态资源请求都直接代理到Docker容器
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 允许浏览器缓存静态资源
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
    
    # 特殊处理根路径，确保正确处理
    location = / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header Pragma "no-cache";
        expires off;
    }
    
    # API路由配置 - 禁用缓存
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        add_header Pragma "no-cache";
        expires off;
        
        # 超时设置
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # 特殊处理/_next/static路径，允许缓存
    location /_next/static/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态资源长期缓存
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }
    
    # 主要应用反向代理
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        
        # WebSocket支持
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 重要的请求头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 增加超时，防止长请求超时
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }
    
    # 错误页面处理
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}